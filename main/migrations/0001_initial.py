# Generated by Django 5.0.14 on 2025-04-27 21:41

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PendingUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(db_column='Email', max_length=254, unique=True)),
                ('full_name', models.CharField(db_column='FullName', max_length=255)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=20, null=True)),
                ('address', models.TextField(blank=True, db_column='Address', null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=128, null=True)),
                ('token', models.UUIDField(db_column='Token', default=uuid.uuid4, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
            ],
            options={
                'db_table': 'PendingUsers',
            },
        ),
        migrations.CreateModel(
            name='TechList',
            fields=[
                ('id', models.AutoField(db_column='TechID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='TechName', max_length=255, null=True)),
                ('category', models.CharField(db_column='Category', max_length=255)),
                ('brand', models.CharField(db_column='Brand', max_length=255)),
                ('price', models.DecimalField(db_column='Price', decimal_places=2, max_digits=10)),
                ('image', models.ImageField(blank=True, db_column='Image', null=True, upload_to='tech_images/')),
            ],
            options={
                'db_table': 'TechList',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(db_column='UserID', primary_key=True, serialize=False)),
                ('full_name', models.CharField(db_column='FullName', max_length=255)),
                ('email', models.EmailField(db_column='Email', max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=20, null=True)),
                ('address', models.TextField(blank=True, db_column='Address', null=True)),
                ('registration_date', models.DateTimeField(auto_now_add=True, db_column='RegistrationDate')),
                ('password', models.CharField(blank=True, db_column='Password', max_length=128, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(db_column='OrderID', primary_key=True, serialize=False)),
                ('order_date', models.DateTimeField(auto_now_add=True, db_column='OrderDate')),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('total_price', models.DecimalField(db_column='TotalPrice', decimal_places=2, max_digits=10)),
                ('user', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tech', models.ForeignKey(db_column='TechID', null=True, on_delete=django.db.models.deletion.CASCADE, to='main.techlist')),
            ],
            options={
                'db_table': 'Orders',
            },
        ),
    ]
